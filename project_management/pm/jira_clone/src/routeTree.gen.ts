/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as _notFoundRouteImport } from './routes/__not-found'
import { Route as SignupRouteImport } from './routes/Signup'
import { Route as ProfileRouteImport } from './routes/Profile'
import { Route as LoginRouteImport } from './routes/Login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TeamsIndexRouteImport } from './routes/teams/index'
import { Route as TasksIndexRouteImport } from './routes/tasks/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as TeamsAddRouteImport } from './routes/teams/add'
import { Route as TeamsIdRouteImport } from './routes/teams/$id'
import { Route as TasksAddRouteImport } from './routes/tasks/add'
import { Route as TasksIdRouteImport } from './routes/tasks/$id'
import { Route as ProjectsIdRouteImport } from './routes/projects/id'
import { Route as ProjectsAddRouteImport } from './routes/projects/add'

const _notFoundRoute = _notFoundRouteImport.update({
  id: '/__not-found',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/Signup',
  path: '/Signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/Profile',
  path: '/Profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/Login',
  path: '/Login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamsIndexRoute = TeamsIndexRouteImport.update({
  id: '/teams/',
  path: '/teams/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksIndexRoute = TasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamsAddRoute = TeamsAddRouteImport.update({
  id: '/teams/add',
  path: '/teams/add',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamsIdRoute = TeamsIdRouteImport.update({
  id: '/teams/$id',
  path: '/teams/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksAddRoute = TasksAddRouteImport.update({
  id: '/tasks/add',
  path: '/tasks/add',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksIdRoute = TasksIdRouteImport.update({
  id: '/tasks/$id',
  path: '/tasks/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIdRoute = ProjectsIdRouteImport.update({
  id: '/projects/id',
  path: '/projects/id',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsAddRoute = ProjectsAddRouteImport.update({
  id: '/projects/add',
  path: '/projects/add',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Login': typeof LoginRoute
  '/Profile': typeof ProfileRoute
  '/Signup': typeof SignupRoute
  '/projects/add': typeof ProjectsAddRoute
  '/projects/id': typeof ProjectsIdRoute
  '/tasks/$id': typeof TasksIdRoute
  '/tasks/add': typeof TasksAddRoute
  '/teams/$id': typeof TeamsIdRoute
  '/teams/add': typeof TeamsAddRoute
  '/projects': typeof ProjectsIndexRoute
  '/tasks': typeof TasksIndexRoute
  '/teams': typeof TeamsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Login': typeof LoginRoute
  '/Profile': typeof ProfileRoute
  '/Signup': typeof SignupRoute
  '/projects/add': typeof ProjectsAddRoute
  '/projects/id': typeof ProjectsIdRoute
  '/tasks/$id': typeof TasksIdRoute
  '/tasks/add': typeof TasksAddRoute
  '/teams/$id': typeof TeamsIdRoute
  '/teams/add': typeof TeamsAddRoute
  '/projects': typeof ProjectsIndexRoute
  '/tasks': typeof TasksIndexRoute
  '/teams': typeof TeamsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/Login': typeof LoginRoute
  '/Profile': typeof ProfileRoute
  '/Signup': typeof SignupRoute
  '/__not-found': typeof _notFoundRoute
  '/projects/add': typeof ProjectsAddRoute
  '/projects/id': typeof ProjectsIdRoute
  '/tasks/$id': typeof TasksIdRoute
  '/tasks/add': typeof TasksAddRoute
  '/teams/$id': typeof TeamsIdRoute
  '/teams/add': typeof TeamsAddRoute
  '/projects/': typeof ProjectsIndexRoute
  '/tasks/': typeof TasksIndexRoute
  '/teams/': typeof TeamsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Login'
    | '/Profile'
    | '/Signup'
    | '/projects/add'
    | '/projects/id'
    | '/tasks/$id'
    | '/tasks/add'
    | '/teams/$id'
    | '/teams/add'
    | '/projects'
    | '/tasks'
    | '/teams'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Login'
    | '/Profile'
    | '/Signup'
    | '/projects/add'
    | '/projects/id'
    | '/tasks/$id'
    | '/tasks/add'
    | '/teams/$id'
    | '/teams/add'
    | '/projects'
    | '/tasks'
    | '/teams'
  id:
    | '__root__'
    | '/'
    | '/Login'
    | '/Profile'
    | '/Signup'
    | '/__not-found'
    | '/projects/add'
    | '/projects/id'
    | '/tasks/$id'
    | '/tasks/add'
    | '/teams/$id'
    | '/teams/add'
    | '/projects/'
    | '/tasks/'
    | '/teams/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  SignupRoute: typeof SignupRoute
  _notFoundRoute: typeof _notFoundRoute
  ProjectsAddRoute: typeof ProjectsAddRoute
  ProjectsIdRoute: typeof ProjectsIdRoute
  TasksIdRoute: typeof TasksIdRoute
  TasksAddRoute: typeof TasksAddRoute
  TeamsIdRoute: typeof TeamsIdRoute
  TeamsAddRoute: typeof TeamsAddRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  TasksIndexRoute: typeof TasksIndexRoute
  TeamsIndexRoute: typeof TeamsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__not-found': {
      id: '/__not-found'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _notFoundRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Signup': {
      id: '/Signup'
      path: '/Signup'
      fullPath: '/Signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Profile': {
      id: '/Profile'
      path: '/Profile'
      fullPath: '/Profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Login': {
      id: '/Login'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teams/': {
      id: '/teams/'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof TeamsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teams/add': {
      id: '/teams/add'
      path: '/teams/add'
      fullPath: '/teams/add'
      preLoaderRoute: typeof TeamsAddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teams/$id': {
      id: '/teams/$id'
      path: '/teams/$id'
      fullPath: '/teams/$id'
      preLoaderRoute: typeof TeamsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/add': {
      id: '/tasks/add'
      path: '/tasks/add'
      fullPath: '/tasks/add'
      preLoaderRoute: typeof TasksAddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/$id': {
      id: '/tasks/$id'
      path: '/tasks/$id'
      fullPath: '/tasks/$id'
      preLoaderRoute: typeof TasksIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/id': {
      id: '/projects/id'
      path: '/projects/id'
      fullPath: '/projects/id'
      preLoaderRoute: typeof ProjectsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/add': {
      id: '/projects/add'
      path: '/projects/add'
      fullPath: '/projects/add'
      preLoaderRoute: typeof ProjectsAddRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  SignupRoute: SignupRoute,
  _notFoundRoute: _notFoundRoute,
  ProjectsAddRoute: ProjectsAddRoute,
  ProjectsIdRoute: ProjectsIdRoute,
  TasksIdRoute: TasksIdRoute,
  TasksAddRoute: TasksAddRoute,
  TeamsIdRoute: TeamsIdRoute,
  TeamsAddRoute: TeamsAddRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  TasksIndexRoute: TasksIndexRoute,
  TeamsIndexRoute: TeamsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
